geom_text(aes(label = after_stat(count)), size = 5,
stat = "count", vjust = 1.5, colour = "white") +
labs(y = "Número de Estudiantes") +
theme_minimal() +
scale_fill_grey() +
theme(
axis.title = element_text(color = "black", family = "sans", face = "bold"),
axis.text = element_text(color = "black", family = "sans", face = "bold"),
text = element_text(family = "sans", face = "bold")
)
#| label: fig-distribucion-aprobacion-sexo
#| fig-cap: "Distribución y Aprobación de candidatos por sexo"
#| fig-subcap:
#|   - "Distribución de candidatos por sexo"
#|   - "Distribución de aprobación por sexo"
#| layout-ncol: 2
ggplot(alumnos_sexo, aes(Sexo)) +
geom_bar(aes(fill = Sexo), width = 0.5) +
geom_text(aes(label = after_stat(count)), size = 5,
stat = "count", vjust = 1.5, colour = "white") +
labs(y = "Número de Estudiantes") +
theme_minimal() +
scale_fill_grey() +
theme(
axis.title = element_text(color = "black", family = "sans", face = "bold"),
axis.text = element_text(color = "black", family = "sans", face = "bold"),
text = element_text(family = "sans", face = "bold")
)
resultados_generales2_2 <- read_csv("resultados_generales.csv")
aprobacion_sexo <- resultados_generales2_2 %>%
filter(Diploma == "SI") %>%
distinct(estudiante, sexo) %>%
ggplot(aes(sexo), group = sexo) +
geom_bar(aes(fill = sexo))+
geom_text(aes(label = after_stat(count)),  size = 5,
stat = "count", vjust = 1.5, colour = "white") +
labs(y = "Número de Estudiantes") +
theme_minimal() +
scale_fill_grey() +
theme(
axis.title = element_text(color = "black", family = "sans", face = "bold"),
axis.text = element_text(color = "black", family = "sans", face = "bold"),
)
aprobacion_sexo
View(resultados_generales2_2)
resultados_generales2_2 %>%
filter(Diploma == "SI") %>%
distinct(estudiante)
View(resultados_generales2_2 %>%
filter(Diploma == "SI") %>%
distinct(estudiante))
resultados_generales2_2 %>%
filter(Diploma == "SI")
resultados_generales2_2 %>%
distinct(estudiante, seco, Diploma)
resultados_generales2_2 %>%
distinct(estudiante, sexo, Diploma)
install.packages("editData")
editData:::editData()
aprobacion_sexo <- resultados_generales2_2 %>%
filter(Diploma == "SI") %>%
distinct(estudiante) %>%
ggplot(aes(sexo), group = sexo) +
geom_bar(aes(fill = sexo))+
geom_text(aes(label = after_stat(count)),  size = 5,
stat = "count", vjust = 1.5, colour = "white") +
labs(y = "Número de Estudiantes") +
theme_minimal() +
scale_fill_grey() +
theme(
axis.title = element_text(color = "black", family = "sans", face = "bold"),
axis.text = element_text(color = "black", family = "sans", face = "bold"),
)
aprobacion_sexo
aprobacion_sexo <- resultados_generales2_2 %>%
filter(Diploma == "SI") %>%
distinct(estudiante, sexo) %>%
ggplot(aes(sexo), group = sexo) +
geom_bar(aes(fill = sexo))+
geom_text(aes(label = after_stat(count)),  size = 5,
stat = "count", vjust = 1.5, colour = "white") +
labs(y = "Número de Estudiantes") +
theme_minimal() +
scale_fill_grey() +
theme(
axis.title = element_text(color = "black", family = "sans", face = "bold"),
axis.text = element_text(color = "black", family = "sans", face = "bold"),
)
aprobacion_sexo
notas_componentes_clean3
View(notas_componentes_clean3)
notas_componentes_clean3 %>%
distinct(nombre, asignatura, calificacion) |>
mutate(calificacion = factor(calificacion, levels = c("A", "B", "C", "D", "E"))) %>%
group_by(calificacion) %>%
summarise(estudiantes = n()) %>%
ungroup()
View(notas_componentes_clean3 %>%
distinct(nombre, asignatura, calificacion) |>
mutate(calificacion = factor(calificacion, levels = c("A", "B", "C", "D", "E"))) %>%
group_by(calificacion) %>%
summarise(estudiantes = n()) %>%
ungroup())
calificacion_tdc <- notas_componentes_clean3 %>%
distinct(nombre, asignatura, calificacion) |>
mutate(calificacion = factor(calificacion, levels = c("A", "B", "C", "D", "E"))) %>%
group_by(calificacion) %>%
summarise(estudiantes = n()) %>%
ungroup() %>%
ggplot(aes(x = calificacion, y = estudiantes)) +
geom_bar(stat = "identity", fill = "burlywood1") +
geom_text(aes(label = estudiantes), size = 4, vjust = 1.4, colour = "black") +
labs(x = "Calificación", y = "Número de estudiantes") +
theme_minimal() +
theme(axis.title = element_text(family = "sans", face="bold", color = "black"),
axis.text = element_text(family = "sans", face="bold", color = "black", size = 14),
legend.title = element_blank(),
legend.position = "bottom")
calificacion_tdc
calificacion_tdc <- notas_componentes_clean3 %>%
distinct(nombre, asignatura, calificacion) |>
mutate(calificacion = factor(calificacion, levels = c("A", "B", "C", "D", "E"))) %>%
group_by(calificacion) %>%
summarise(estudiantes = n()) %>%
ungroup() %>%
ggplot(aes(x = calificacion, y = estudiantes)) +
geom_bar(stat = "identity", fill = "burlywood1") +
geom_text(aes(label = estudiantes), size = 3.5, vjust = 1.4, colour = "black", fontface = "bold") +
labs(x = "Calificación", y = "Número de estudiantes") +
theme_minimal() +
theme(axis.title = element_text(family = "sans", face="bold", color = "black"),
axis.text = element_text(family = "sans", face="bold", color = "black", size = 12),
legend.title = element_blank(),
legend.position = "bottom")
calificacion_tdc
View(notas_componentes)
notas_componentes3 |>
clean_names()
notas_componentes |>
clean_names()
notas_componentes |>
clean_names() |>
select(3,4, 5)
notas_componentes |>
clean_names() |>
select(10,3,4,5)
names(notas_componentes)
notas_componentes |>
clean_names() |>
select(10,3,4,5,12)
notas_componentes |>
clean_names() |>
select(10,3,4,5,12) |>
filter(asignatura = "TEORÍA DEL CONOCIMIENTO")
notas_componentes |>
clean_names() |>
select(10,3,4,5,12) |>
filter(asignatura == "TEORÍA DEL CONOCIMIENTO")
notas_componentes |>
clean_names() |>
select(10,3,4,5,12) |>
filter(asignatura == "TEORÍA DEL CONOCIMIENTO" & total_de_puntos == NA)
notas_componentes |>
clean_names() |>
select(10,3,4,5,12) |>
filter(asignatura == "TEORÍA DEL CONOCIMIENTO" & is.na(total_de_puntos))
notas_componentes |>
clean_names() |>
select(10,3,4,5,12) |>
filter(asignatura == "TEORÍA DEL CONOCIMIENTO" & total_puntos == is.na(total_de_puntos))
calificacion_tdc
notas_componentes
notas_componentes |>
clean_names()
notas_componentes |>
clean_names() |>
select(nombre, asignatura, calificacion_final_de_la_asignatura)
notas_componentes |>
clean_names() |>
select(nombre, asignatura, calificacion_final_de_la_asignatura) |>
filter(asignatura == "TEORÍA DEL CONOCIMIENTO")
notas_componentes |>
clean_names() |>
select(nombre, asignatura, calificacion_final_de_la_asignatura) |>
filter(asignatura == "TEORÍA DEL CONOCIMIENTO") |>
distinct(nombre, asignatura, calificacion_final_de_la_asignatura)
clean_names() |>
select(nombre, asignatura, calificacion_final_de_la_asignatura) |>
rename(calificacion = calificacion_final_de_la_asignatura) |>
mutate()
clean_names() |>
select(nombre, asignatura, calificacion_final_de_la_asignatura) |>
rename(calificacion = calificacion_final_de_la_asignatura) |>
mutate()
notas_componentes |>
clean_names() |>
select(nombre, asignatura, calificacion_final_de_la_asignatura) |>
rename(calificacion = calificacion_final_de_la_asignatura) |>
filter(asignatura == "TEORÍA DEL CONOCIMIENTO") |>
distinct(nombre, asignatura, calificacion)
notas_componentes |>
clean_names() |>
select(nombre, asignatura, calificacion_final_de_la_asignatura) |>
rename(calificacion = calificacion_final_de_la_asignatura) |>
mutate(calificacion = factor(calificacion,
levels = c("A", "B", "C", "D", "E"))) |>
filter(asignatura == "TEORÍA DEL CONOCIMIENTO") |>
distinct(nombre, asignatura, calificacion) |>
group_by(calificacion) |>
summarize(estudiantes = count())
notas_componentes |>
clean_names() |>
select(nombre, asignatura, calificacion_final_de_la_asignatura) |>
rename(calificacion = calificacion_final_de_la_asignatura) |>
mutate(calificacion = factor(calificacion,
levels = c("A", "B", "C", "D", "E"))) |>
filter(asignatura == "TEORÍA DEL CONOCIMIENTO") |>
distinct(nombre, asignatura, calificacion) |>
group_by(calificacion) |>
summarize(estudiantes = n())
notas_componentes |>
clean_names() |>
select(nombre, asignatura, calificacion_final_de_la_asignatura) |>
rename(calificacion = calificacion_final_de_la_asignatura) |>
mutate(calificacion = factor(calificacion,
levels = c("A", "B", "C", "D", "E"))) |>
filter(asignatura == "TEORÍA DEL CONOCIMIENTO") |>
distinct(nombre, asignatura, calificacion) |>
group_by(calificacion) |>
summarize(estudiantes = n()) |>
ggplot(aes(calificacion, estudiantes)) +
geom_col()
read_csv("variacion_tdc")
read_csv("variacion_tdc.csv")
variacion_tdc <- read_delim("variacion_tdc.csv",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
tdc_22_23 <- read_delim("variacion_tdc.csv",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
monografias22_23 %>%
clean_names() %>%
pivot_longer(cols = starts_with("x"), names_to = "año", values_to = "monografias") %>%
group_by(calificacion, año) %>%
summarise(total_trabajos = sum(monografias), .groups = "drop") %>%
mutate(porcentaje = total_trabajos/sum(total_trabajos)) %>%
select(calificacion, año, porcentaje)
variacion_tdc <- tdc_22_23 |>
pivot_longer(cols = starts_with("y"), names_to = "año",
values_to = "estudiantes") |>
group_by(calificacion, año) %>%
summarise(total_trabajos = sum(estudiantes), .groups = "drop") %>%
mutate(porcentaje = total_trabajos/sum(total_trabajos)) %>%
select(calificacion, año, porcentaje) %>%
pivot_wider(names_from = año, values_from = porcentaje) %>%
mutate(variacion = (x2023 - x2022)/(x2022))
variacion_tdc <- tdc_22_23 |>
pivot_longer(cols = starts_with("y"), names_to = "año",
values_to = "estudiantes") |>
group_by(calificacion, año) %>%
summarise(total_trabajos = sum(estudiantes), .groups = "drop") %>%
mutate(porcentaje = total_trabajos/sum(total_trabajos)) %>%
select(calificacion, año, porcentaje) %>%
pivot_wider(names_from = año, values_from = porcentaje) %>%
mutate(variacion = (y2023 - y2022)/(y2022))
variacion_tdc
variacion_tdc_22_23 |>
pivot_longer(cols = starts_with("y"), names_to = "año",
values_to = "estudiantes") |>
group_by(calificacion, año) %>%
summarise(total_trabajos = sum(estudiantes), .groups = "drop") %>%
mutate(porcentaje = total_trabajos/sum(total_trabajos)) %>%
select(calificacion, año, porcentaje) %>%
pivot_wider(names_from = año, values_from = porcentaje) %>%
mutate(variacion = (y2023 - y2022)/(y2022)) |>
gt() %>%
cols_label(
calificacion = "Calificacion",
y2022 = "Nov 2022",
y2023 = "May 2023",
variacion = "Variación") %>%
cols_align(align = "left",columns = everything()) %>%
fmt_percent(columns = where(is.numeric), decimals = 1) %>%
sub_missing(columns = everything(),rows = everything(),
missing_text = "----") %>%
tab_style(
style = cell_text(weight = "bold", color = "black"),
locations = cells_column_labels()
) %>%
tab_options(table.font.size = 12,
heading.align = 'left', heading.title.font.size = px(16)) %>%
gt_theme_pff()
variacion_tdc_22_23 <- tdc_22_23 |>
pivot_longer(cols = starts_with("y"), names_to = "año",
values_to = "estudiantes") |>
group_by(calificacion, año) %>%
summarise(total_trabajos = sum(estudiantes), .groups = "drop") %>%
mutate(porcentaje = total_trabajos/sum(total_trabajos)) %>%
select(calificacion, año, porcentaje) %>%
pivot_wider(names_from = año, values_from = porcentaje) %>%
mutate(variacion = (y2023 - y2022)/(y2022)) |>
gt() %>%
cols_label(
calificacion = "Calificacion",
y2022 = "Nov 2022",
y2023 = "May 2023",
variacion = "Variación") %>%
cols_align(align = "left",columns = everything()) %>%
fmt_percent(columns = where(is.numeric), decimals = 1) %>%
sub_missing(columns = everything(),rows = everything(),
missing_text = "----") %>%
tab_style(
style = cell_text(weight = "bold", color = "black"),
locations = cells_column_labels()
) %>%
tab_options(table.font.size = 12,
heading.align = 'left', heading.title.font.size = px(16)) %>%
gt_theme_pff()
variacion_tdc_22_23
tdc_22_23 <- read_delim("variacion_tdc.csv",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
variacion_tdc_22_23 <- tdc_22_23 |>
pivot_longer(cols = starts_with("y"), names_to = "año",
values_to = "estudiantes") |>
group_by(calificacion, año) %>%
summarise(total_trabajos = sum(estudiantes), .groups = "drop") %>%
mutate(porcentaje = total_trabajos/sum(total_trabajos)) %>%
select(calificacion, año, porcentaje) %>%
pivot_wider(names_from = año, values_from = porcentaje) %>%
mutate(variacion = (y2023 - y2022)/(y2022)) |>
gt() %>%
cols_label(
calificacion = "Calificacion",
y2022 = "Nov 2022",
y2023 = "May 2023",
variacion = "Variación") %>%
cols_align(align = "left",columns = everything()) %>%
fmt_percent(columns = where(is.numeric), decimals = 1) %>%
sub_missing(columns = everything(),rows = everything(),
missing_text = "----") %>%
tab_style(
style = cell_text(weight = "bold", color = "black"),
locations = cells_column_labels()
) %>%
tab_options(table.font.size = 12,
heading.align = 'left', heading.title.font.size = px(16)) %>%
gt_theme_pff()
variacion_tdc_22_23
### Teoría del Conocimiento
notas_componentes_clean3
print(notas_componentes_clean3, n = "inf")
notas_componentes_clean3 %>%
distinct(nombre, asignatura, calificacion) |>
mutate(calificacion = factor(calificacion, levels = c("A", "B", "C", "D", "E"))) %>%
group_by(calificacion) %>%
summarise(estudiantes = n()) %>%
ungroup() %>%
ggplot(aes(x = calificacion, y = estudiantes)) +
geom_bar(stat = "identity", fill = "burlywood1") +
geom_text(aes(label = estudiantes), size = 3.5, vjust = 1.4, colour = "black", fontface = "bold") +
labs(x = "Calificación", y = "Número de estudiantes") +
theme_minimal() +
theme(axis.title = element_text(family = "sans", face="bold", color = "black"),
axis.text = element_text(family = "sans", face="bold", color = "black", size = 12),
legend.title = element_blank(),
legend.position = "bottom")
notas_componentes |>
clean_names() |>
select(nombre, asignatura, calificacion_final_de_la_asignatura) |>
rename(calificacion = calificacion_final_de_la_asignatura) |>
mutate(calificacion = factor(calificacion,
levels = c("A", "B", "C", "D", "E"))) |>
filter(asignatura == "TEORÍA DEL CONOCIMIENTO") |>
distinct(nombre, asignatura, calificacion) |>
group_by(calificacion) |>
summarize(estudiantes = n()) |>
ggplot(aes(calificacion, estudiantes)) +
geom_col()
write_csv(notas_componentes_clean3, "notas_componentes_clean.csv")
write_csv(notas_componentes_clean3, "notas_componentes_clean3.csv")
### Teoría del Conocimiento
notas_componentes_clean3 <- read_csv("notas_componentes_clean3.csv",
col_types = cols(calificacion = col_factor(levels = c("A",
"B", "C", "D", "E"))))
notas_componentes_clean3 %>%
distinct(nombre, asignatura, calificacion) |>
mutate(calificacion = factor(calificacion, levels = c("A", "B", "C", "D", "E"))) %>%
group_by(calificacion) %>%
summarise(estudiantes = n()) %>%
ungroup() %>%
ggplot(aes(x = calificacion, y = estudiantes)) +
geom_bar(stat = "identity", fill = "burlywood1") +
geom_text(aes(label = estudiantes), size = 3.5, vjust = 1.4, colour = "black", fontface = "bold") +
labs(x = "Calificación", y = "Número de estudiantes") +
theme_minimal() +
theme(axis.title = element_text(family = "sans", face="bold", color = "black"),
axis.text = element_text(family = "sans", face="bold", color = "black", size = 12),
legend.title = element_blank(),
legend.position = "bottom")
View(Resultados_Diploma_IB_2023)
### Teoría del Conocimiento
notas_componentes_clean3 <- read_csv("notas_componentes_clean3.csv",
col_types = cols(calificacion = col_factor(levels = c("A",
"B", "C", "D", "E"))))
notas_TI %>%
filter(str_detect(asignatura, "ESPAÑOL")) %>%
ggplot(aes(asignatura, calificacion_moderada, fill = asignatura)) +
geom_boxplot(alpha = 0.6, outlier.shape=NA) +
geom_point(position = position_jitterdodge(jitter.width = 0.8,
dodge.width = 0.8),
color = "brown", size = 1.8, alpha = 0.80) +
geom_hline(yintercept = 20, linetype = "dashed", color = "lightgreen", size = 1.25) +
geom_hline(yintercept = 40, linetype = "dashed", color = "coral", size = 1.25) +
annotate(geom = "text", x = 0.2, y = 21, label = rango_esp1, hjust = 0,
size = 2.5, color ="black", fontface = "bold") +
annotate(geom = "text", x = 0.2, y = 39, label = rango_esp2, hjust = 0,
size = 2.5, color ="black", fontface = "bold") +
scale_y_continuous(limits = c(0,42), n.breaks = 5) +
labs(y = "Calificación Moderada") +
#scale_fill_viridis_d(alpha = 0.5) +
theme_minimal() +
theme(axis.title = element_text(family = "sans", face="bold", color = "black"),
axis.title.x = element_blank(),
axis.text = element_text(family = "sans", face="bold", color = "black"),
legend.title = element_blank(),
legend.position = "none",
text = element_text(family = "sans", face = "bold", color = "black", size = 12)
)
#| label: load-packages
#| include: false
library(tidyverse)
library(janitor)
library(gt)
library(forcats)
library(viridis)
library(RColorBrewer)
library(ggtext)
library(gtExtras)
library(readxl)
notas_TI %>%
filter(str_detect(asignatura, "ESPAÑOL")) %>%
ggplot(aes(asignatura, calificacion_moderada, fill = asignatura)) +
geom_boxplot(alpha = 0.6, outlier.shape=NA) +
geom_point(position = position_jitterdodge(jitter.width = 0.8,
dodge.width = 0.8),
color = "brown", size = 1.8, alpha = 0.80) +
geom_hline(yintercept = 20, linetype = "dashed", color = "lightgreen", size = 1.25) +
geom_hline(yintercept = 40, linetype = "dashed", color = "coral", size = 1.25) +
annotate(geom = "text", x = 0.2, y = 21, label = rango_esp1, hjust = 0,
size = 2.5, color ="black", fontface = "bold") +
annotate(geom = "text", x = 0.2, y = 39, label = rango_esp2, hjust = 0,
size = 2.5, color ="black", fontface = "bold") +
scale_y_continuous(limits = c(0,42), n.breaks = 5) +
labs(y = "Calificación Moderada") +
#scale_fill_viridis_d(alpha = 0.5) +
theme_minimal() +
theme(axis.title = element_text(family = "sans", face="bold", color = "black"),
axis.title.x = element_blank(),
axis.text = element_text(family = "sans", face="bold", color = "black"),
legend.title = element_blank(),
legend.position = "none",
text = element_text(family = "sans", face = "bold", color = "black", size = 12)
)
notas_TI %>%
filter(str_detect(asignatura, "ESPAÑOL")) %>%
ggplot(aes(asignatura, calificacion_moderada, fill = componente)) +
geom_boxplot(alpha = 0.6, outlier.shape=NA) +
geom_point(position = position_jitterdodge(jitter.width = 0.8,
dodge.width = 0.8),
color = "brown", size = 1.8, alpha = 0.80) +
geom_hline(yintercept = 20, linetype = "dashed", color = "lightgreen", size = 1.25) +
geom_hline(yintercept = 40, linetype = "dashed", color = "coral", size = 1.25) +
annotate(geom = "text", x = 0.2, y = 21, label = rango_esp1, hjust = 0,
size = 2.5, color ="black", fontface = "bold") +
annotate(geom = "text", x = 0.2, y = 39, label = rango_esp2, hjust = 0,
size = 2.5, color ="black", fontface = "bold") +
scale_y_continuous(limits = c(0,42), n.breaks = 5) +
labs(y = "Calificación Moderada") +
#scale_fill_viridis_d(alpha = 0.5) +
theme_minimal() +
theme(axis.title = element_text(family = "sans", face="bold", color = "black"),
axis.title.x = element_blank(),
axis.text = element_text(family = "sans", face="bold", color = "black"),
legend.title = element_blank(),
legend.position = "none",
text = element_text(family = "sans", face = "bold", color = "black", size = 12)
)
notas_TI %>%
filter(str_detect(asignatura, "ESPAÑOL")) %>%
ggplot(aes(asignatura, calificacion_moderada, fill = componente)) +
geom_boxplot(alpha = 0.6, outlier.shape=NA) +
geom_point(position = position_jitterdodge(jitter.width = 0.8,
dodge.width = 0.8),
color = "brown", size = 1.8, alpha = 0.80) +
geom_hline(yintercept = 20, linetype = "dashed", color = "lightgreen", size = 1.25) +
geom_hline(yintercept = 40, linetype = "dashed", color = "coral", size = 1.25) +
annotate(geom = "text", x = 0.2, y = 21, label = rango_esp1, hjust = 0,
size = 2.5, color ="black", fontface = "bold") +
annotate(geom = "text", x = 0.2, y = 39, label = rango_esp2, hjust = 0,
size = 2.5, color ="black", fontface = "bold") +
scale_y_continuous(limits = c(0,42), n.breaks = 5) +
labs(y = "Calificación Moderada") +
#scale_fill_viridis_d(alpha = 0.5) +
theme_minimal() +
theme(axis.title = element_text(family = "sans", face="bold", color = "black"),
axis.title.x = element_blank(),
axis.text = element_text(family = "sans", face="bold", color = "black"),
legend.title = element_blank(),
legend.position = "bottom",
text = element_text(family = "sans", face = "bold", color = "black", size = 12)
)
